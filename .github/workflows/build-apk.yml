name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip python3-setuptools git openjdk-17-jdk zip unzip wget automake autoconf libtool pkg-config
        pip install --upgrade pip
        pip install buildozer cython virtualenv

    - name: Build APK with libffi patch
      run: |
        # –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è buildozer
        python3 -m venv venv
        source venv/bin/activate

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º buildozer (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ–±–Ω–æ–≤–ª—è–µ–º)
        pip install --upgrade buildozer

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É, —á—Ç–æ–±—ã buildozer —Å–∫–∞—á–∞–ª libffi
        buildozer android debug || true

        echo "üîß –ü–∞—Ç—á–∏–º libffi..."
        LIBFFI_PATH=$(find .buildozer/android/platform/build-arm64-v8a -type d -name "libffi" | head -n 1 || true)
        if [ -n "$LIBFFI_PATH" ]; then
          echo "‚úÖ –ù–∞–π–¥–µ–Ω libffi: $LIBFFI_PATH"
          sed -i '/AC_PROG_LIBTOOL/a m4_pattern_allow([LT_SYS_SYMBOL_USCORE])' "$LIBFFI_PATH/configure.ac"
          echo "‚úÖ –ü—Ä–æ–ø–∞—Ç—á–µ–Ω–æ configure.ac"
          (cd "$LIBFFI_PATH" && autoreconf -fi)
        else
          echo "‚ö†Ô∏è libffi –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ —É—Å–ø–µ–ª —Å–∫–∞—á–∞—Ç—å—Å—è, –ø–æ–ø—Ä–æ–±—É–π –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–±–æ—Ä–∫—É –µ—â—ë —Ä–∞–∑"
        fi

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ (—Ç–µ–ø–µ—Ä—å —Å –ø—Ä–æ–ø–∞—Ç—á–µ–Ω–Ω—ã–º libffi)
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: MyApp
        path: bin/*.apk
