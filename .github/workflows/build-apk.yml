name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          python3-pip python3-setuptools python3-venv git \
          openjdk-17-jdk zip unzip build-essential autoconf automake libtool autoconf-archive pkg-config

    - name: Update git submodules
      run: git submodule update --init --recursive

    - name: Create virtual environment
      run: python3 -m venv venv

    - name: Activate venv and install Buildozer
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install buildozer cython setuptools

    - name: Run Buildozer once to generate platform folder
      run: |
        source venv/bin/activate
        buildozer android debug || true

    - name: Patch libffi macros
      run: |
        echo "üîß –ò—â–µ–º configure.ac –∏ –ø–∞—Ç—á–∏–º LT_SYS_SYMBOL_USCORE..."
        FILES=$(find .buildozer/android/platform -name "configure.ac")
        if [ -z "$FILES" ]; then
          echo "‚ö†Ô∏è configure.ac –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø–∞—Ç—á –Ω–µ –ø—Ä–∏–º–µ–Ω—ë–Ω"
        else
          echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ $(echo "$FILES" | wc -l) —Ñ–∞–π–ª(–æ–≤) ‚Äî –≤–Ω–æ—Å–∏–º –ø—Ä–∞–≤–∫–∏..."
          echo "$FILES" | while read FILE; do
            sed -i '1im4_pattern_allow([^LT_SYS_SYMBOL_USCORE$])' "$FILE"
            echo "  üîß –ü—Ä–æ–ø–∞—Ç—á–µ–Ω: $FILE"
          done
          echo "üéâ –ü–∞—Ç—á —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω"
        fi

    - name: Patch pyjnius (replace long with int)
      run: |
        echo "üîß –ü–∞—Ç—á–∏–º jnius_utils.pxi (long ‚Üí int)..."
        FILE=$(python3 -c "import jnius, pathlib; print(pathlib.Path(jnius.__file__).parent / 'jnius_utils.pxi')")
        if [ -f "$FILE" ]; then
          sed -i 's/isinstance(arg, long)/isinstance(arg, int)/g' "$FILE"
          echo "‚úÖ –ü–∞—Ç—á –ø—Ä–∏–º–µ–Ω—ë–Ω: $FILE"
        else
          echo "‚ö†Ô∏è jnius_utils.pxi –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—Ç—á"
        fi

    - name: Build APK (second run)
      run: |
        source venv/bin/activate
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: TestApp-APK
        path: bin/*.apk
